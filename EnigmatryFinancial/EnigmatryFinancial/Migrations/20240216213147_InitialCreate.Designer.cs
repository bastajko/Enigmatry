// <auto-generated />
using System;
using EnigmatryFinancial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnigmatryFinancial.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240216213147_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("EnigmatryFinancial.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "address");

                    b.Property<string>("ClientVAT")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "clientVAT");

                    b.Property<int>("CompanyType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<bool>("IsWhitelisted")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "isWhitelisted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "phone");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "registrationNumber");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tenantId");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "website");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.HasIndex("ClientVAT")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("664976ec-ae26-4087-851c-08ef4b8f6129"),
                            Address = "",
                            ClientVAT = "123456789",
                            CompanyType = 0,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientA",
                            Phone = "",
                            RegistrationNumber = "ABC123",
                            TenantId = new Guid("93bb8aad-e788-4a87-a6a9-612a621a9668"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bdb9e183-a3ef-4579-bf7f-4913d97fb53e"),
                            Address = "",
                            ClientVAT = "987654321",
                            CompanyType = 0,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientB",
                            Phone = "",
                            RegistrationNumber = "XYZ456",
                            TenantId = new Guid("8eb58f39-03a3-4024-8d1d-f58a727eed64"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bcae78e3-f0cd-4e27-83ba-ed456f45d1f9"),
                            Address = "",
                            ClientVAT = "246813579",
                            CompanyType = 1,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientC",
                            Phone = "",
                            RegistrationNumber = "DEF789",
                            TenantId = new Guid("e90985d5-b3c7-4302-8120-8d72727c84c4"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f04d15fe-ac3d-4f87-8811-22b3e2602b65"),
                            Address = "",
                            ClientVAT = "654321987",
                            CompanyType = 1,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientD",
                            Phone = "",
                            RegistrationNumber = "GHI012",
                            TenantId = new Guid("93bb8aad-e788-4a87-a6a9-612a621a9668"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("111603fa-e372-4173-b7fe-74e492b8facf"),
                            Address = "",
                            ClientVAT = "135792468",
                            CompanyType = 2,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientE",
                            Phone = "",
                            RegistrationNumber = "JKL345",
                            TenantId = new Guid("8eb58f39-03a3-4024-8d1d-f58a727eed64"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c79997d9-afd5-4f12-ab75-e1c24a60a3f5"),
                            Address = "",
                            ClientVAT = "369258147",
                            CompanyType = 2,
                            Email = "",
                            IsWhitelisted = true,
                            Name = "ClientF",
                            Phone = "",
                            RegistrationNumber = "MNO678",
                            TenantId = new Guid("8eb58f39-03a3-4024-8d1d-f58a727eed64"),
                            Website = "",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.FinancialDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "accountNumber");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "balance");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "clientId");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "currency");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "taxReturnStatus");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "tenantId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TenantId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            AccountNumber = "95867648",
                            Balance = 1000.00m,
                            ClientId = new Guid("f04d15fe-ac3d-4f87-8811-22b3e2602b65"),
                            Currency = 1,
                            Status = 5,
                            TenantId = new Guid("93bb8aad-e788-4a87-a6a9-612a621a9668"),
                            Type = "Invoice",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            AccountNumber = "93577094",
                            Balance = 2500.00m,
                            ClientId = new Guid("111603fa-e372-4173-b7fe-74e492b8facf"),
                            Currency = 0,
                            Status = 9,
                            TenantId = new Guid("8eb58f39-03a3-4024-8d1d-f58a727eed64"),
                            Type = "Receipt",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "productCode");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2020945e-6da3-468c-8d14-dc10956bafc1"),
                            Name = "ProductA",
                            ProductCode = "ProductA",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4f222773-68bd-43ed-8f02-71b3c9b4773e"),
                            Name = "ProductB",
                            ProductCode = "ProductB",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.PropertyConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int>("EntityName")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyName")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisibilityType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.ToTable("PropertyConfigs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6030ca-8957-4244-ba21-362d5a20a316"),
                            EntityName = 0,
                            ProductCode = "ProductA",
                            PropertyName = 0,
                            VisibilityType = 1,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ade3e49c-80bb-4210-a0a7-ed0223378e43"),
                            EntityName = 0,
                            ProductCode = "ProductA",
                            PropertyName = 2,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("98cbcd4e-94ec-4229-a773-2f3fe9c6c41c"),
                            EntityName = 0,
                            ProductCode = "ProductA",
                            PropertyName = 1,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02210b17-5f26-40ad-80ae-12a9becc9be9"),
                            EntityName = 1,
                            ProductCode = "ProductA",
                            PropertyName = 5,
                            VisibilityType = 2,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b98886a5-666d-4f73-8bce-3b13a6de9696"),
                            EntityName = 1,
                            ProductCode = "ProductA",
                            PropertyName = 6,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("389de7bd-db34-4de5-a223-69f89692159c"),
                            EntityName = 1,
                            ProductCode = "ProductA",
                            PropertyName = 7,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b4e3cc66-88ef-4b87-84c1-d83585f0e038"),
                            EntityName = 1,
                            ProductCode = "ProductA",
                            PropertyName = 8,
                            VisibilityType = 2,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("21981030-df70-4aa9-b37a-2854804c6c7b"),
                            EntityName = 1,
                            ProductCode = "ProductA",
                            PropertyName = 9,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1f12fbc3-635b-4005-a056-177f44feb3ec"),
                            EntityName = 0,
                            ProductCode = "ProductB",
                            PropertyName = 0,
                            VisibilityType = 1,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5d8b2da6-5ce2-4c2c-957f-0b1c15bf331a"),
                            EntityName = 0,
                            ProductCode = "ProductB",
                            PropertyName = 2,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6add967e-3d5f-4729-80df-29f5855395ae"),
                            EntityName = 0,
                            ProductCode = "ProductB",
                            PropertyName = 1,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("889e186b-7724-46e0-8beb-4f10c8266c4d"),
                            EntityName = 0,
                            ProductCode = "ProductB",
                            PropertyName = 3,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ee614dcf-9269-4181-b0f8-b07eeb5490da"),
                            EntityName = 1,
                            ProductCode = "ProductB",
                            PropertyName = 5,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c296349d-1f07-4655-b541-44f802b8714e"),
                            EntityName = 1,
                            ProductCode = "ProductB",
                            PropertyName = 6,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4cc729ee-4c4e-43aa-a23b-dbe4d68bf7e8"),
                            EntityName = 1,
                            ProductCode = "ProductB",
                            PropertyName = 7,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0d980124-6f6c-404f-9f9f-0f4e162577ee"),
                            EntityName = 1,
                            ProductCode = "ProductB",
                            PropertyName = 8,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("103829c8-34e0-44d9-b369-aa4e37c61325"),
                            EntityName = 1,
                            ProductCode = "ProductB",
                            PropertyName = 9,
                            VisibilityType = 0,
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("IsWhitelisted")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "isWhitelisted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93bb8aad-e788-4a87-a6a9-612a621a9668"),
                            IsWhitelisted = true,
                            Name = "TenantA",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8eb58f39-03a3-4024-8d1d-f58a727eed64"),
                            IsWhitelisted = true,
                            Name = "TenantB",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e90985d5-b3c7-4302-8120-8d72727c84c4"),
                            IsWhitelisted = false,
                            Name = "TenantC",
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FinancialDocumentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenCreated");

                    b.Property<DateTime>("WhenUpdated")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "whenUpdated");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDocumentId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fcaac00-01b4-4cc2-8f51-a3485b83bd59"),
                            Amount = 783.61m,
                            Category = "Utilities",
                            Date = new DateTime(2023, 3, 17, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9064),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0881b757-bedf-4e48-b8c1-c9777df5a8fc"),
                            Amount = 17.52m,
                            Category = "Shopping",
                            Date = new DateTime(2024, 2, 2, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9249),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bbb62e61-b9f3-4abf-a049-3bbd6bcee5c9"),
                            Amount = 678.36m,
                            Category = "Food & Dining",
                            Date = new DateTime(2023, 4, 23, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9270),
                            Description = "Gas station purchase",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4a72e24c-33fa-4051-ab44-445d6ebc641b"),
                            Amount = 274.69m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 3, 10, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9280),
                            Description = "Grocery shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e881d0c8-90f1-4aab-934b-69aa724687df"),
                            Amount = 787.62m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 9, 5, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9289),
                            Description = "Grocery shopping",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cc75bbe9-9cb2-42d5-9889-36a3c26bd347"),
                            Amount = 434.44m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 4, 21, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9306),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cddeface-0808-46c0-a673-f4018d8eff4b"),
                            Amount = 311.73m,
                            Category = "Entertainment",
                            Date = new DateTime(2023, 6, 2, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9315),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f8502001-dd23-4a8a-ad6a-1b909cb65163"),
                            Amount = 441.24m,
                            Category = "Entertainment",
                            Date = new DateTime(2023, 9, 2, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9324),
                            Description = "Gas station purchase",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0611ed3f-c640-4321-bae1-16f510a6d64f"),
                            Amount = 705.03m,
                            Category = "Food & Dining",
                            Date = new DateTime(2023, 7, 2, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9333),
                            Description = "Grocery shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c3b385c8-9db2-4f48-ad1e-80435630145d"),
                            Amount = 136.94m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 4, 28, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9348),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("289de9f9-d8fc-4699-b917-35956b3d4531"),
                            Amount = 913.32m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 11, 4, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9363),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d708241b-cbc4-44e9-a5e3-0dead02f7d75"),
                            Amount = 262.04m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 6, 30, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9373),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5dd65e39-b3ba-4a1f-9215-0eaf3377a242"),
                            Amount = 396.11m,
                            Category = "Entertainment",
                            Date = new DateTime(2023, 12, 29, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9383),
                            Description = "Gas station purchase",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("11387832-d2b6-42fd-8f3e-4c23ad2f44f9"),
                            Amount = 581.26m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 5, 18, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9393),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e2b3c753-6c63-4cf9-922e-165993d141bb"),
                            Amount = 248.83m,
                            Category = "Utilities",
                            Date = new DateTime(2023, 12, 3, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9403),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3ab0b22e-9ec3-4024-a744-e0da82014bf1"),
                            Amount = 677.89m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 11, 11, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9414),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6d362412-1afb-4826-894f-d3edd1aabc03"),
                            Amount = 542.63m,
                            Category = "Utilities",
                            Date = new DateTime(2023, 3, 2, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9424),
                            Description = "Online shopping",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f4a54f09-7a36-4c2c-8322-a2765424e129"),
                            Amount = 221.18m,
                            Category = "Utilities",
                            Date = new DateTime(2023, 11, 4, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9437),
                            Description = "Dinner at restaurant",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ce6081d6-5bf7-4fde-bdc8-dc37efaefade"),
                            Amount = 708.07m,
                            Category = "Shopping",
                            Date = new DateTime(2023, 5, 17, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9452),
                            Description = "Grocery shopping",
                            FinancialDocumentId = new Guid("479184bd-8e27-4d61-a032-e36c64ef4488"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("52b2e25c-95a3-4448-aa60-99063203ef86"),
                            Amount = 514.79m,
                            Category = "Food & Dining",
                            Date = new DateTime(2024, 1, 17, 22, 31, 45, 814, DateTimeKind.Local).AddTicks(9462),
                            Description = "Grocery shopping",
                            FinancialDocumentId = new Guid("c8dcf52a-c368-46a8-87e5-43c5b6abf015"),
                            WhenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhenUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Client", b =>
                {
                    b.HasOne("EnigmatryFinancial.Entities.Tenant", "Tenant")
                        .WithMany("Clients")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.FinancialDocument", b =>
                {
                    b.HasOne("EnigmatryFinancial.Entities.Client", "Client")
                        .WithMany("FinancialDocuments")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnigmatryFinancial.Entities.Tenant", "Tenant")
                        .WithMany("FinancialDocuments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Transaction", b =>
                {
                    b.HasOne("EnigmatryFinancial.Entities.FinancialDocument", "FinancialDocument")
                        .WithMany("Transactions")
                        .HasForeignKey("FinancialDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialDocument");
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Client", b =>
                {
                    b.Navigation("FinancialDocuments");
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.FinancialDocument", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("EnigmatryFinancial.Entities.Tenant", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("FinancialDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
